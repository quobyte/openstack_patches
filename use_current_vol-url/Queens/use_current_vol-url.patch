diff --git a/cinder/volume/drivers/quobyte.py b/cinder/volume/drivers/quobyte.py
index ab89a1fd6..877b71156 100644
--- a/cinder/volume/drivers/quobyte.py
+++ b/cinder/volume/drivers/quobyte.py
@@ -32,7 +32,7 @@ from cinder import utils
 from cinder.volume import configuration
 from cinder.volume.drivers import remotefs as remotefs_drv
 
-VERSION = '1.1.7'
+VERSION = '1.1.7p'
 
 LOG = logging.getLogger(__name__)
 
@@ -88,6 +88,7 @@ class QuobyteDriver(remotefs_drv.RemoteFSSnapDriverDistributed):
         1.1.5 - Enables extension of volumes with snapshots
         1.1.6 - Optimizes volume creation
         1.1.7 - Support fuse subtype based Quobyte mount validation
+        1.1.7p - Patched out of tree
 
     """
 
@@ -111,6 +112,13 @@ class QuobyteDriver(remotefs_drv.RemoteFSSnapDriverDistributed):
         self._execute('fallocate', '-l', '%sG' % size,
                       path, run_as_root=self._execute_as_root)
 
+    def _strip_qb_protocol(self, url):
+        # Strip quobyte:// from the URL
+        protocol = self.driver_volume_type + "://"
+        if url.startswith(protocol):
+            return url[len(protocol):]
+        return url
+
     def do_setup(self, context):
         """Any initialization the volume driver does while starting."""
         super(QuobyteDriver, self).do_setup(context)
@@ -376,12 +384,7 @@ class QuobyteDriver(remotefs_drv.RemoteFSSnapDriverDistributed):
         """
         self.shares = {}
 
-        url = self.configuration.quobyte_volume_url
-
-        # Strip quobyte:// from the URL
-        protocol = self.driver_volume_type + "://"
-        if url.startswith(protocol):
-            url = url[len(protocol):]
+        url = self._strip_qb_protocol(self.configuration.quobyte_volume_url)
 
         self.shares[url] = None  # None = No extra mount options.
 
@@ -393,7 +396,10 @@ class QuobyteDriver(remotefs_drv.RemoteFSSnapDriverDistributed):
         :param quobyte_volume: string
         """
         mount_path = self._get_mount_point_for_share(quobyte_volume)
-        self._mount_quobyte(quobyte_volume, mount_path, ensure=True)
+        # NOTE(kaisers): Always use the currently configured volume url
+        self._mount_quobyte(
+            self._strip_qb_protocol(self.configuration.quobyte_volume_url),
+            mount_path, ensure=True)
 
     @utils.synchronized('quobyte_ensure', external=False)
     def _ensure_shares_mounted(self):
