diff --git a/nova/tests/unit/virt/libvirt/volume/test_quobyte.py b/nova/tests/unit/virt/libvirt/volume/test_quobyte.py
index 73aa16d47e..f07f393ac7 100644
--- a/nova/tests/unit/virt/libvirt/volume/test_quobyte.py
+++ b/nova/tests/unit/virt/libvirt/volume/test_quobyte.py
@@ -76,10 +76,11 @@ class QuobyteTestCase(test.NoDBTestCase):
         expected_commands = [mock.call('mount.quobyte',
                                        '--disable-xattrs',
                                        quobyte_volume,
-                                       export_mnt_base)
+                                       export_mnt_base,
+                                       run_as_root=True)
                              ]
         mock_execute.assert_has_calls(expected_commands)
-        mock_exists.assert_called_once_with(" /run/systemd/system")
+        mock_exists.assert_called_once_with("/run/systemd/system")
 
     @mock.patch.object(os.path, "exists", return_value=True)
     @mock.patch.object(fileutils, "ensure_tree")
@@ -97,14 +98,14 @@ class QuobyteTestCase(test.NoDBTestCase):
         mock_ensure_tree.assert_called_once_with(export_mnt_base)
         expected_commands = [mock.call('systemd-run',
                                        '--scope',
-                                       '--user',
                                        'mount.quobyte',
                                        '--disable-xattrs',
                                        quobyte_volume,
-                                       export_mnt_base)
+                                       export_mnt_base,
+                                       run_as_root=True)
                              ]
         mock_execute.assert_has_calls(expected_commands)
-        mock_exists.assert_called_once_with(" /run/systemd/system")
+        mock_exists.assert_called_once_with("/run/systemd/system")
 
     @mock.patch.object(os.path, "exists", return_value=False)
     @mock.patch.object(fileutils, "ensure_tree")
@@ -129,10 +130,11 @@ class QuobyteTestCase(test.NoDBTestCase):
                                        quobyte_volume,
                                        export_mnt_base,
                                        '-c',
-                                       config_file_dummy)
+                                       config_file_dummy,
+                                       run_as_root=True)
                              ]
         mock_execute.assert_has_calls(expected_commands)
-        mock_exists.assert_called_once_with(" /run/systemd/system")
+        mock_exists.assert_called_once_with("/run/systemd/system")
 
     @mock.patch.object(fileutils, "ensure_tree")
     @mock.patch.object(utils, "execute",
@@ -159,7 +161,8 @@ class QuobyteTestCase(test.NoDBTestCase):
         quobyte.umount_volume(export_mnt_base)
 
         mock_execute.assert_called_once_with('umount.quobyte',
-                                             export_mnt_base)
+                                             export_mnt_base,
+                                             run_as_root=True)
 
     @mock.patch.object(quobyte.LOG, "error")
     @mock.patch.object(utils, "execute")
diff --git a/nova/virt/libvirt/volume/quobyte.py b/nova/virt/libvirt/volume/quobyte.py
index 462beab3e5..c9b6932a47 100644
--- a/nova/virt/libvirt/volume/quobyte.py
+++ b/nova/virt/libvirt/volume/quobyte.py
@@ -47,10 +47,10 @@ def mount_volume(volume, mnt_base, configfile=None):
     # additional metadata requests in the backend. xattrs can be
     # enabled without issues but will reduce performance.
     command = ['mount.quobyte', '--disable-xattrs', volume, mnt_base]
-    if os.path.exists(" /run/systemd/system"):
+    if os.path.exists("/run/systemd/system"):
         # Note(kaisers): with systemd this requires a separate CGROUP to
         # prevent Nova service stop/restarts from killing the mount.
-        command = ['systemd-run', '--scope', '--user', 'mount.quobyte',
+        command = ['systemd-run', '--scope', 'mount.quobyte',
                    '--disable-xattrs', volume, mnt_base]
     if configfile:
         command.extend(['-c', configfile])
@@ -58,14 +58,14 @@ def mount_volume(volume, mnt_base, configfile=None):
     LOG.debug('Mounting volume %s at mount point %s ...',
               volume,
               mnt_base)
-    utils.execute(*command)
+    utils.execute(*command, run_as_root=True)
     LOG.info('Mounted volume: %s', volume)
 
 
 def umount_volume(mnt_base):
     """Wraps execute calls for unmouting a Quobyte volume"""
     try:
-        utils.execute('umount.quobyte', mnt_base)
+        utils.execute('umount.quobyte', mnt_base, run_as_root=True)
     except processutils.ProcessExecutionError as exc:
         if 'Device or resource busy' in six.text_type(exc):
             LOG.error("The Quobyte volume at %s is still in use.", mnt_base)
